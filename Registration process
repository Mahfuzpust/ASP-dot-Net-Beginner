public async Task<Status> RegistrationAsync(RegistrationModel model)
        {
           var status = new Status();
           var userExits = await userManager.FindByNameAsync(model.Username);
           if (userExits != null)
            {
                status.StatusCode= 0;
                status.Message = "User Name already exists";
                return status;
            }
            ApplicationUser user = new ApplicationUser
            {
                SecurityStamp=Guid.NewGuid().ToString(),
                Name= model.Name,
                Email=model.Email,
                UserName=model.Username,
                EmailConfirmed=true,
            };

            var result = await userManager.CreateAsync(user, model.Password);
            if(result.Succeeded)
            {
                status.StatusCode= 0;
                status.Message = "User creation failed";
                return status;
            }
            //role management
            if (!await roleManager.RoleExistsAsync(model.Role))
                await roleManager.CreateAsync(new IdentityRole(model.Role));

            if(await roleManager.RoleExistsAsync(model.Role))
            {
                await userManager.AddToRoleAsync(user, model.Role);
            }

            status.StatusCode= 0;
            status.Message = "Registration successfully";
            return status;
        }
